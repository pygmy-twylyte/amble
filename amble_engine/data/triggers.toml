# Generated by amble_script from amble_script/data/Seaside (5 files)
# Do not edit: this file is compiled from DSL.
# Source Hash (fnv64): 5c50158b58cd5135

# trigger Ambient: Slipway (source line 25)
[[triggers]]
name = "Ambient: Slipway"
conditions = [{ type = "chance", one_in = 3.3333333333333335 }, { type = "inRoom", room_id = "boathouse-slipway" }]
actions = [{ type = "spinnerMessage", spinner = "AmbientSlipway" }]
# trigger Hint: Cut Package Open With Knife (source line 42)
[[triggers]]
name = "Hint: Cut Package Open With Knife"
only_once = true
conditions = [{ type = "take", item_id = "fillet_knife" }]
actions = [{ type = "scheduleInIf", turns_ahead = 8, condition = { all = [{ type = "hasItem", item_id = "tiny_package" }, { type = "missingItem", item_id = "tiny_portrait" }, { type = "hasItem", item_id = "fillet_knife" }] }, on_false = { type = "cancel" }, actions = [{ type = "showMessage", text = "That fillet knife seemed pretty sharp. Maybe you could cut the package open with it?" }], note = "hint: cut package with knife" }]
# trigger Locket Taken (source line 31)
[[triggers]]
name = "Locket Taken"
only_once = true
conditions = [{ type = "take", item_id = "gold_locket" }]
actions = [{ type = "awardPoints", amount = 10 }, { type = "addFlag", flag = { type = "sequence", name = "return-locket", end = 4 } }, { type = "showMessage", text = "You loop the locket back through its chain to free it from the rope. It feels familiar in your hand, somehow." }, { type = "setItemDescription", item_sym = "gold_locket", text = "The gold locket you found looped over the rope railing on the lighthouse path. It isn't very worn, but somehow feels familiar in your hand." }, { type = "scheduleInIf", turns_ahead = 3, condition = { type = "hasItem", item_id = "gold_locket" }, on_false = { type = "retryNextTurn" }, actions = [{ type = "showMessage", text = "You notice a beautiful, heron-like bird circling close by." }, { type = "scheduleInIf", turns_ahead = 3, condition = { type = "hasItem", item_id = "gold_locket" }, on_false = { type = "retryNextTurn" }, actions = [{ type = "showMessage", text = "You notice the heron again, gliding easily on the wind gusts toward the quay square." }, { type = "scheduleInIf", turns_ahead = 3, condition = { all = [{ type = "hasItem", item_id = "gold_locket" }, { type = "inRoom", room_id = "quay-square" }] }, on_false = { type = "retryNextTurn" }, actions = [{ type = "showMessage", text = "The beautiful seabird that's been following you lands on a nearby lamppost carrying something in its beak. After a moment, it drops it at your feet before soaring off over the quay and back into the harbor." }, { type = "spawnItemInRoom", item_id = "tiny_package", room_id = "quay-square" }], note = "heron box delivery" }], note = "second heron sighting" }], note = "first heron sighting" }]
# trigger Locket: Portrait Found (source line 53)
[[triggers]]
name = "Locket: Portrait Found"
only_once = true
note = "return-locket to #1"
conditions = [{ type = "take", item_id = "tiny_portrait" }]
actions = [{ type = "advanceFlag", flag = "return-locket" }, { type = "awardPoints", amount = 5 }]
# trigger Dropped Locket (source line 59)
[[triggers]]
name = "Dropped Locket"
conditions = [{ type = "drop", item_id = "gold_locket" }]
actions = [{ type = "showMessage", text = "The moment you drop the locket, you begin to miss it -- and feel like you've **been** missing it for a long time." }, { type = "addFlag", flag = { type = "simple", name = "status:longing" } }]
# trigger Status: Longing (source line 64)
[[triggers]]
name = "Status: Longing"
conditions = [{ type = "chance", one_in = 3.3333333333333335 }, { type = "hasFlag", flag = "status:longing" }]
actions = [{ type = "spinnerMessage", spinner = "Longing" }]
# trigger Picked Up Locket Again (source line 71)
[[triggers]]
name = "Picked Up Locket Again"
conditions = [{ type = "take", item_id = "gold_locket" }, { type = "flagInProgress", flag = "return-locket" }]
actions = [{ type = "showMessage", text = "You feel better now that you have the locket back in your hand, like your best and oldest friend." }, { type = "removeFlag", flag = "status:longing" }]
# trigger Cut Twine With Knife (source line 72)
[[triggers]]
name = "Cut Twine With Knife"
only_once = true
conditions = [{ type = "useItemOnItem", interaction = "open", target_id = "tiny_package", tool_id = "fillet_knife" }]
actions = [{ type = "showMessage", text = "Using the knife, you work carefully to free the package from its wrapping without damaging it..." }]
# trigger Cut Twine / Use 'Open' Hint (source line 77)
[[triggers]]
name = "Cut Twine / Use 'Open' Hint"
note = "'cut' won't open the package, so give hint to use 'open'"
conditions = [{ type = "useItemOnItem", interaction = "cut", target_id = "tiny_package", tool_id = "fillet_knife" }, { type = "chance", one_in = 2.0 }]
actions = [{ type = "showMessage", text = "You feel like you've cut through enough of the twine that you can open the package with the tip of the knife." }]
# trigger Cut Open Tiny Package (source line 84)
[[triggers]]
name = "Cut Open Tiny Package"
only_once = true
note = "requires ItemAbility::Cut"
conditions = [{ type = "actOnItem", target_sym = "tiny_package", action = "open" }]
actions = [{ type = "showMessage", text = "You easily cut through the twine holding the package shut." }, { type = "setContainerState", item_sym = "tiny_package", state = "open" }, { type = "awardPoints", amount = 5 }]
