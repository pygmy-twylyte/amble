[[triggers]]
name = "High-Ridge: Read Scrawled Note"
only_once = true
conditions = [{ type = "useItem", item_id = "scrawled_note", ability = "read" }]
actions = [{ type = "addFlag", flag = { type = "simple", name = "read-scrawled-note" } }]

[[triggers]]
name = "High-Ridge: Plaque 1 Too Grimy to Read"
conditions = [{ type = "useItem", item_id = "plaque_1", ability = "read" }, { type = "missingFlag", flag = "cleaned-plaque-1" }]
actions = [{ type = "denyRead", reason = "The plaque is too grimy to make out the words. You'll need to find a way to clean it off." }, { type = "addFlag", flag = { type = "simple", name = "tried-read-plaque-1" } }]

[[triggers]]
name = "High-Ridge: Plaque 1 Cleaned"
only_once = true
conditions = [{ type = "actOnItem", target_sym = "plaque_1", action = "clean" }]
actions = [{ type = "addFlag", flag = { type = "simple", name = "cleaned-plaque-1" } }, { type = "awardPoints", amount = 3 }, { type = "showMessage", text = "With some saliva and a little effort, you're able to remove the grime and bring the plaque to a dull shine." }]

[[triggers]]
name = "High Ridge: Read Cleaned Plaque 1"
only_once = true
conditions = [{ type = "useItem", item_id = "plaque_1", ability = "read" }, { type = "hasFlag", flag = "cleaned-plaque-1" }]
actions = [{ type = "addFlag", flag = { type = "simple", name = "read-plaque-1" } }, { type = "awardPoints", amount = 5 }]

[[triggers]]
name = "Two-Sheds-Landing: Cut or Chop Tree"
only_once = true
conditions = [{ type = "actOnItem", target_sym = "fallen_tree", action = "cut" }]
actions = [{ type = "showMessage", text = "With considerable effort and just one blister, you're able to chop a path through the branches. The stone steps continue to curve upward from here." }, { type = "despawnItem", item_id = "fallen_tree" }, { type = "addFlag", flag = { type = "simple", name = "cleared-fallen-tree" } }, { type = "addFlag", flag = { type = "simple", name = "chopped-fallen-tree" } }, { type = "awardPoints", amount = 5 }]

[[triggers]]
name = "Two-Sheds-Landing: Arson-Aid Used on Tree"
only_once = true
conditions = [{ type = "useItemOnItem", interaction = "burn", target_id = "fallen_tree", tool_id = "flamethrower" }]
actions = [{ type = "showMessage", text = "You aim the Arson-Aid and begin to squeeze the trigger when the device erupts into a fireball! Panicking, you throw the whole Arson-Aid into the tree." }]

[[triggers]]
name = "Two-Sheds-Landing: Burn Tree"
only_once = true
conditions = [{ type = "actOnItem", target_sym = "fallen_tree", action = "burn" }]
actions = [{ type = "despawnItem", item_id = "fallen_tree" }, { type = "addFlag", flag = { type = "simple", name = "cleared-fallen-tree" } }, { type = "addFlag", flag = { type = "simple", name = "burned-fallen-tree" } }, { type = "awardPoints", amount = 5 }, { type = "showMessage", text = "WHOOOOOMPH! The fallen tree erupts into flame and, quite improbably, is reduced to ash in mere seconds." }]

[[triggers]]
name = "Guard-Post: Traveling Without Towel"
only_once = true
conditions = [{ type = "enter", room_id = "guard-post" }, { type = "missingItem", item_id = "towel" }]
actions = [{ type = "showMessage", text = "You pause here, realizing with increasing concern that you are traveling without a towel." }]

[[triggers]]
name = "East-of-Building: Pluck Dental Floss"
only_once = true
conditions = [{ type = "take", item_id = "dental_floss" }]
actions = [{ type = "showMessage", text = "You pluck a strand of floss from the bush. It comes away easily â disturbingly so. Minty. Strong. Too strong. Youâre no botanist, but youâre pretty sure this shouldnât be growing out of a shrubbery." }, { type = "awardPoints", amount = 5 }, { type = "setItemDescription", item_sym = "weird_bush", text = "A squat, leafy bush now stripped of its floss-like strands, bare branches jutting out awkwardly. A small sign next to it reads 'Pride of Montana'." }]

[[triggers]]
name = "Loading-Dock: Spawn Special Delivery"
only_once = true
conditions = [{ type = "leave", room_id = "loading-dock" }]
actions = [{ type = "spawnItemInRoom", item_id = "delivery_box", room_id = "loading-dock" }, { type = "showMessage", text = "You hear a thud behind you, back toward the dock, like something was just dropped off. You glimpse a drone flying away quickly, as if hoping not to be seen. Was that an Initech logo on the side?" }]

[[triggers]]
name = "Loading-Dock: Open Security Crate (Key)"
only_once = true
conditions = [{ type = "unlock", item_id = "security_crate" }]
actions = [{ type = "spawnItemInContainer", item_id = "crowbar", container_id = "security_crate" }, { type = "spawnItemInContainer", item_id = "security_log", container_id = "security_crate" }, { type = "spawnItemInContainer", item_id = "glass_vial", container_id = "security_crate" }, { type = "spawnItemInContainer", item_id = "initech_mug", container_id = "security_crate" }, { type = "addFlag", flag = { type = "simple", name = "unlocked-security-crate" } }, { type = "showMessage", text = "The ear wax on the tip of the key eases it into the rusted lock, which snaps open with a satisfying clunk." }]

[[triggers]]
name = "Loading-Dock: Open Security Crate (Break)"
only_once = true
conditions = [{ type = "actOnItem", target_sym = "security_crate", action = "break" }, { type = "missingFlag", flag = "unlocked-security-crate" }]
actions = [{ type = "despawnItem", item_id = "security_crate" }, { type = "spawnItemCurrentRoom", item_id = "crowbar" }, { type = "spawnItemCurrentRoom", item_id = "security_log" }, { type = "spawnItemCurrentRoom", item_id = "shattered_vial" }, { type = "spawnItemCurrentRoom", item_id = "initech_mug" }, { type = "showMessage", text = "With a few hefty blows, you manage to break the lock haft completely off of the security locker -- well after a few misses had already caved in the lid and destroyed it, but you were having fun. It looks like you broke a couple of the items that were inside in the process." }, { type = "addSpinnerWedge", spinner = "ambientInterior", width = 1, text = "PA Announcement: 'Someone broke into the security locker on the dock. Mind your belongings and report any suspicious activity to security.'" }]

[[triggers]]
name = "Loading-Dock: Open Security Crate (Burn)"
only_once = true
conditions = [{ type = "actOnItem", target_sym = "security_crate", action = "burn" }, { type = "missingFlag", flag = "unlocked-security-crate" }]
actions = [{ type = "despawnItem", item_id = "security_crate" }, { type = "spawnItemCurrentRoom", item_id = "crowbar" }, { type = "spawnItemCurrentRoom", item_id = "burned_security_log" }, { type = "spawnItemCurrentRoom", item_id = "glass_vial" }, { type = "spawnItemCurrentRoom", item_id = "initech_mug" }, { type = "showMessage", text = "WHOOOOOMP! The locker, which you now realize may have been made from the solid magnesium magnolia trees of Siwenna, goes up in a white hot flash -- taking your eyebrows with it. It looks like *some* of the items inside weren't flammable." }, { type = "addSpinnerWedge", spinner = "ambientInterior", width = 1, text = "PA Announcement: 'Someone used an Arson-Aid to torch the security locker at the loading dock. An investigation is underway. Report anyone with scorched clothes or missing eyebrows to security.'" }]

[[triggers]]
name = "Loading-Dock: Got Crowbar"
only_once = true
conditions = [{ type = "take", item_id = "crowbar" }]
actions = [{ type = "showMessage", text = "You feel like Gordon Freeman now, and wonder if maybe Barney's on security here?" }, { type = "addFlag", flag = { type = "simple", name = "got-crowbar" } }, { type = "awardPoints", amount = 3 }, { type = "scheduleIn", turns_ahead = 2, actions = [{ type = "showMessage", text = "... and then you wonder why you're thinking of Barney as a real person instead of a character in a game. And Gordon, for that matter. Wait, he was just *fiction*, right? Come to think of it, you feel a little unsure of reality, and it's worse the nearer you are to the building." }], note = "notice fiction bleed" }]

[[triggers]]
name = "Gonk Droid: Battery Exchange"
only_once = true
conditions = [{ type = "giveToNpc", item_id = "empty_battery", npc_id = "gonk_droid" }]
actions = [{ type = "awardPoints", amount = 2 }, { type = "giveItemToPlayer", npc_id = "gonk_droid", item_id = "charged_battery" }, { type = "setNpcState", npc_id = "gonk_droid", state = "happy" }, { type = "showMessage", text = "Elated that you've given it such a large, empty battery to charge, the gonk droid gives you a fully charged one, free of ... charge?" }]

[[triggers]]
name = "Gonk Droid: Happy When Family Photo Inspected"
only_once = true
conditions = [{ type = "lookAt", item_id = "gonk_family_photo" }]
actions = [{ type = "npcSays", npc_id = "gonk_droid", quote = "GONK gonk!" }, { type = "showMessage", text = "The gonk droid totters with pride as you view its family photo." }, { type = "awardPoints", amount = 2 }, { type = "addFlag", flag = { type = "simple", name = "made-gonk-proud" } }]

[[triggers]]
name = "Patio: Sunglasses Required"
conditions = [{ type = "enter", room_id = "patio" }, { type = "missingItem", item_id = "peril_sunglasses" }]
actions = [{ type = "pushPlayerTo", room_id = "restaurant" }, { type = "showMessage", text = "A blinding burst of light erupts from the swirling starfield, forcing you to shield your eyes. With no protection, you're driven back into the relative safety of the restaurant." }]

[[triggers]]
name = "Patio: Have Sunglasses"
conditions = [{ type = "enter", room_id = "patio" }, { type = "hasItem", item_id = "peril_sunglasses" }]
actions = [{ type = "showMessage", text = "Sensing the possible harm in eating a dessert a stone's throw away from the explosions of all nearby stars, your peril-sensitive sunglasses flash nearly completely opaque, allowing you to see without permanent damage to the retina as the galaxies outside continue to erupt." }]

[[triggers]]
name = "Patio: Award Points Getting In"
only_once = true
conditions = [{ type = "enter", room_id = "patio" }, { type = "hasItem", item_id = "peril_sunglasses" }]
actions = [{ type = "awardPoints", amount = 2 }]

[[triggers]]
name = "Office: Receptionist Unhelpful if No Pass"
conditions = [{ type = "withNpc", npc_id = "b_a_receptionist" }, { type = "missingFlag", flag = "got-visitor-pass" }, { type = "missingFlag", flag = "got-elevator-keycard" }]
actions = [{ type = "setNpcState", npc_id = "b_a_receptionist", state = "normal" }]

[[triggers]]
name = "Office: Receptionist Helpful Once Pass Acquired"
conditions = [{ type = "withNpc", npc_id = "b_a_receptionist" }, { type = "hasFlag", flag = "got-visitor-pass" }, { type = "missingFlag", flag = "got-elevator-keycard" }]
actions = [{ type = "setNpcState", npc_id = "b_a_receptionist", state = "happy" }]

[[triggers]]
name = "Office: Exchange Invitation for Visitor Pass"
conditions = [{ type = "giveToNpc", item_id = "invitation", npc_id = "b_a_receptionist" }]
actions = [{ type = "addFlag", flag = { type = "simple", name = "got-visitor-pass" } }, { type = "despawnItem", item_id = "invitation" }, { type = "spawnItemInInventory", item_id = "visitor_pass" }, { type = "awardPoints", amount = 5 }, { type = "setNpcState", npc_id = "b_a_receptionist", state = "happy" }, { type = "showMessage", text = """
The robotic receptionist initially glances at you with the disdain of someone who spends all day waiting on people who are waiting on someone else, but her demeanor and even appearance immediately become pleasant when she sees the invitation in your hand. She deftly takes it from you, scrutinizes it intently, and slips it into a desktop document vaporizer.

She then hands you a laminated card on a lanyard. It appears blank, yet also appears to show a variety of credentials at the same time.""" }, { type = "npcSays", npc_id = "b_a_receptionist", quote = "Here is your visitor pass. Much of the facility will be inaccessible without it, so treat it like a second towel." }]

[[triggers]]
name = "Office: Open Poetry Performer"
conditions = [{ type = "open", item_id = "poetry_performer" }]
actions = [{ type = "showMessage", text = """
The machine clicks on and hums. A flashing red light warns:
            â ï¸ NOT FOR USE WITH VOGON POETRY â ï¸""" }]

[[triggers]]
name = "Office: Insert Poems to Open Panic Room"
only_once = true
conditions = [{ type = "insert", item_id = "vogon_poetry_book", container_id = "poetry_performer" }]
actions = [{ type = "awardPoints", amount = 5 }, { type = "despawnItem", item_id = "vogon_poetry_book" }, { type = "addFlag", flag = { type = "simple", name = "panic-room-open" } }, { type = "revealExit", exit_from = "b-a-office", exit_to = "poetry-panic", direction = "west" }, { type = "addSpinnerWedge", spinner = "ambientInterior", width = 1, text = "PA announcement: Vogon poetry has been detected in the building. If you are experiencing nausea, go to med bay for assistance." }, { type = "showMessage", text = """
The machine begins to whine at a high pitch and gives off a noxious odor of burning hair. A klaxon blares and the display warns:

            â ï¸ VOGON INPUT DETECTED - POETRY PANIC ROOM UNLOCKED â ï¸
               â£ VAPORIZING VOGON INPUT - AVOID TOXIC FUMES â£

The whiteboard on the west wall slides to the side, revealing a vault-like door.""" }]

[[triggers]]
name = "Office: Gifted Lost and Found Key"
only_once = true
conditions = [{ type = "enter", room_id = "b-a-office" }, { type = "hasFlag", flag = "got-elevator-keycard" }, { type = "withNpc", npc_id = "b_a_receptionist" }]
actions = [{ type = "giveItemToPlayer", npc_id = "b_a_receptionist", item_id = "lost_and_found_key" }, { type = "showMessage", text = "Seeing you return with the keycard, the receptionist looks around warily and slips something into your hand, then looks directly at the lost and found box." }, { type = "npcSays", npc_id = "b_a_receptionist", quote = "Finally! A Candidate bright enough to get to that keycard. I guess I lost the pool. Who'd have thought it'd be a primate?" }, { type = "npcSays", npc_id = "b_a_receptionist", quote = "(*whispers*) Use this before you head down to AA-3B." }]

[[triggers]]
name = "Office: Lost and Found Unlocked"
only_once = true
conditions = [{ type = "unlock", item_id = "lost_and_found_box" }]
actions = [{ type = "awardPoints", amount = 3 }, { type = "addFlag", flag = { type = "simple", name = "lost-and-found-opened" } }, { type = "setItemDescription", item_sym = "lost_and_found_box", text = "A sturdy metal lockbox marked 'Lost and Found'. Its lid is cracked slightly open." }]

[[triggers]]
name = "Office: Receptionist Comment (Read Poetry)"
only_once = true
conditions = [{ type = "hasFlag", flag = "read-vogon-poetry" }, { type = "hasFlag", flag = "status:nauseated" }]
actions = [{ type = "npcSays", npc_id = "emh", quote = "You look ill. You didn't read that poetry book, did you? That won't look good on your evaluation. The Emergency Medical Hologram on level AA-3 may be able to help." }]

[[triggers]]
name = "Poetry-Panic: Acquired Elevator Keycard"
only_once = true
conditions = [{ type = "take", item_id = "elevator_keycard" }]
actions = [{ type = "setNpcState", npc_id = "b_a_receptionist", state = "bored" }, { type = "addFlag", flag = { type = "simple", name = "got-elevator-keycard" } }]

[[triggers]]
name = "Lounge: Rug Taken / Reveal Trapdoor"
only_once = true
conditions = [{ type = "take", item_id = "lebowski_rug" }]
actions = [{ type = "revealExit", exit_from = "lounge", exit_to = "portal-room", direction = "down" }, { type = "addFlag", flag = { type = "simple", name = "found-portal-room" } }, { type = "awardPoints", amount = 3 }, { type = "showMessage", text = "Light shines around the edges of a trap door revealed in the floor when you remove the rug. The room no longer seems tied together." }]

[[triggers]]
name = "Lounge: Rug Burned Away"
only_once = true
conditions = [{ type = "actOnItem", target_sym = "lebowski_rug", action = "burn" }]
actions = [{ type = "despawnItem", item_id = "lebowski_rug" }, { type = "revealExit", exit_from = "lounge", exit_to = "portal-room", direction = "down" }, { type = "addFlag", flag = { type = "simple", name = "found-portal-room" } }, { type = "awardPoints", amount = 3 }, { type = "showMessage", text = "When the acrid smoke clears and your eyes stop burning, you can make out a trap door revealed in the floor where the rug used to be." }]

[[triggers]]
name = "Lift-Bank-Main: Keycard Activates Elevator"
conditions = [{ type = "enter", room_id = "lift-bank-main" }, { type = "hasItem", item_id = "elevator_keycard" }]
actions = [{ type = "showMessage", text = "The keycard in your pack chirps twice as you approach the proximity reader on the wall, which responds with a happy melody." }]

[[triggers]]
name = "Lift-Bank-Main: Point Award On First Activation"
only_once = true
conditions = [{ type = "enter", room_id = "lift-bank-main" }, { type = "hasItem", item_id = "elevator_keycard" }]
actions = [{ type = "showMessage", text = "The main lift lights up, and Muzak plays over a tinny speaker inside. In horror, you realize: It's Porcupine Tree's 'The Sound of Muzak' -- the Muzak version." }, { type = "awardPoints", amount = 3 }]

[[triggers]]
name = "Portal-Room: Gun Powered"
conditions = [{ type = "insert", item_id = "charged_battery", container_id = "portal_gun" }]
actions = [{ type = "addFlag", flag = { type = "simple", name = "portal-gun-powered" } }, { type = "awardPoints", amount = 3 }, { type = "restrictItem", item_id = "charged_battery" }, { type = "setItemDescription", item_sym = "portal_gun", text = "A black and white Portal gun sits bolted to its pedestal, aimed at a target on the wall. A fused battery juts from the compartment and the power indicator glows steadily green." }, { type = "showMessage", text = "Arcing wildly as you insert it, the fully charged 20 KV battery fuses itself to the contacts inside the portal gun -- when then emits a quick high-pitched whine. The POWER indicator lights a steady green." }]

[[triggers]]
name = "Portal-Room: Gun Fired / Open Portal"
only_once = true
conditions = [{ type = "useItem", item_id = "portal_gun", ability = "turnOn" }, { type = "hasFlag", flag = "portal-gun-powered" }]
actions = [{ type = "revealExit", exit_from = "portal-room", exit_to = "aperture-lab", direction = "portal" }, { type = "addFlag", flag = { type = "simple", name = "portal-opened" } }, { type = "awardPoints", amount = 5 }, { type = "showMessage", text = "A loud SQUIP! comes from the gun when you turn it on. The wall in front of it sizzles for a moment, and then a crackling oval blue portal expands on the wall to reveal a laboratory space on the other side." }]

[[triggers]]
name = "Portal-Room: Tried Gun Without Power"
conditions = [{ type = "useItem", item_id = "portal_gun", ability = "turnOn" }, { type = "missingFlag", flag = "portal-gun-powered" }]
actions = [{ type = "showMessage", text = "You attempt to turn the portal gun on, but the POWER light briefly flashes red, then goes dark. Nothing else happens." }]

[[triggers]]
name = "Aperture-Lab: Printer Burns Paper"
conditions = [{ type = "useItem", item_id = "lab_printer", ability = "turnOn" }, { type = "containerHasItem", container_id = "lab_printer", item_id = "printer_paper" }]
actions = [{ type = "despawnItem", item_id = "printer_paper" }, { type = "addFlag", flag = { type = "simple", name = "burned-invitation" } }, { type = "spawnItemInRoom", item_id = "burnt_invitation", room_id = "aperture-lab" }, { type = "addSpinnerWedge", spinner = "ambientInterior", width = 1, text = "An annoyed voice on the PA: ATTENTION Staff - do NOT use regular copy paper in the lab PlasmaJet printer, or we will be shut down again -- by order of FEMA, PETA, the ATF, FBI, and our HOA." }, { type = "showMessage", text = "The paper ignites in a flash, and the PlasmaJet spits the flaming fragments of a document on the floor at your feet." }, { type = "showMessage", text = "A nearby smoke detector alarms briefly, the quits with an exasperated sigh when it sees you near the printer, surrounded by smoldering confetti." }]

[[triggers]]
name = "Aperture-Lab: Print Invitation on Asbestos"
only_once = true
conditions = [{ type = "useItem", item_id = "lab_printer", ability = "turnOn" }, { type = "containerHasItem", container_id = "lab_printer", item_id = "asbestos_sheet" }]
actions = [{ type = "addFlag", flag = { type = "simple", name = "invitation-sans-ignition" } }, { type = "awardPoints", amount = 10 }, { type = "despawnItem", item_id = "asbestos_sheet" }, { type = "showMessage", text = "The PlasmaJet emits a blinding flash of light, leaving a printer-shaped purple blob in your visual field and blinding you for a few moments." }, { type = "scheduleIn", turns_ahead = 2, actions = [{ type = "spawnItemInRoom", item_id = "invitation", room_id = "aperture-lab" }, { type = "showMessage", text = "Your vision begins to clear, and you see an engraved invitation on the floor. It glows slightly, and waves of heat warp the air around it." }], note = "blindness clears" }]

[[triggers]]
name = "Aperture-Lab: FoamSafe Misfire"
only_once = true
conditions = [{ type = "useItemOnItem", interaction = "extinguish", target_id = "burnt_invitation", tool_id = "foamsafe_x17" }]
actions = [{ type = "despawnItem", item_id = "foamsafe_x17" }, { type = "showMessage", text = "You spray the foam onto the burning invitation. Instead of dousing the flame, the foam flares up into a spectacular fireball!" }, { type = "addFlag", flag = { type = "sequence", name = "foam-fire-in-lab", end = 3 } }, { type = "scheduleIn", turns_ahead = 2, actions = [{ type = "showMessage", text = "The foam fire accelerates, as it turns into a hissing, popping ball of goo spitting off little globs of flaming napalm!" }, { type = "advanceFlag", flag = "foam-fire-in-lab" }], note = "foam fire starts" }, { type = "scheduleIn", turns_ahead = 3, actions = [{ type = "showMessage", text = "The fire alarm begins to wail as the flames spread through the lab and the sprinklers turn on, pushing you back toward the portal to escape!" }, { type = "advanceFlag", flag = "foam-fire-in-lab" }, { type = "pushPlayerTo", room_id = "portal-room" }], note = "foam fire spreads" }, { type = "scheduleIn", turns_ahead = 8, actions = [{ type = "showMessage", text = "The alarms stop. The fire in the Aperture lab has been extinguised. Hopefully nobody saw you light it, you monster." }, { type = "advanceFlag", flag = "foam-fire-in-lab" }, { type = "awardPoints", amount = 5 }], note = "foam fire out" }]

[[triggers]]
name = "Aperture-Lab: Can't Enter While Lab On Fire"
conditions = [{ type = "enter", room_id = "aperture-lab" }, { type = "flagInProgress", flag = "foam-fire-in-lab" }]
actions = [{ type = "showMessage", text = "You try to get back into the lab, but the flames and oily smoke from the foam fire drive you back through the portal within seconds." }, { type = "pushPlayerTo", room_id = "portal-room" }]

[[triggers]]
name = "Aperture-Lab: Insulate With Towel"
conditions = [{ type = "useItemOnItem", interaction = "handle", target_id = "invitation", tool_id = "towel" }]
actions = [{ type = "showMessage", text = "You wrap your towel around the still-piping-hot invitation to grasp it, suffering only minor burns in the process." }]

[[triggers]]
name = "Aperture-Lab: Handle/Take Invitation with Towel"
only_once = true
conditions = [{ type = "actOnItem", target_sym = "invitation", action = "handle" }]
actions = [{ type = "despawnItem", item_id = "invitation" }, { type = "spawnItemInInventory", item_id = "invitation" }, { type = "addFlag", flag = { type = "simple", name = "got-invitation" } }, { type = "awardPoints", amount = 5 }, { type = "showMessage", text = "Using your towel as insulation, you're able to wrangle the still-hot invitation into your pack." }]

[[triggers]]
name = "Aperture-Lab: Drop Invitation Without Insulation"
conditions = [{ type = "take", item_id = "invitation" }]
actions = [{ type = "replaceDropItem", old_sym = "invitation", new_sym = "invitation" }, { type = "showMessage", text = "You burn your fingers and drop the invitation on the floor. It emits a reddish glow, and shimmers from the radiating heat." }]

[[triggers]]
name = "Sublevel-1-Entrance: Meet the Black Knight"
only_once = true
conditions = [{ type = "talkToNpc", npc_id = "black_knight" }]
actions = [{ type = "addFlag", flag = { type = "simple", name = "talked-to-knight" } }, { type = "npcSays", npc_id = "black_knight", quote = "You shall not pass. This wing is closed... and may not exist at all. Begone!" }]

[[triggers]]
name = "Sublevel-1-Entrance: Taking Sword Angers Knight"
conditions = [{ type = "takeFromNpc", item_id = "dull_longsword", npc_id = "black_knight" }]
actions = [{ type = "setNpcState", npc_id = "black_knight", state = "mad" }, { type = "npcSays", npc_id = "black_knight", quote = "Wha-- HEY! Give that back, you -- you -- cowardly cur!" }]

[[triggers]]
name = "Sublevel-1-Entrance: Return Dull Sword to Knight"
conditions = [{ type = "giveToNpc", item_id = "dull_longsword", npc_id = "black_knight" }]
actions = [{ type = "npcSays", npc_id = "black_knight", quote = "Right. Now don't do it again, or I shall be forced to bludgeon you with it. You still may not pass." }, { type = "setNpcState", npc_id = "black_knight", state = "normal" }]

[[triggers]]
name = "Sublevel-1-Entrance: Sharpen Knight's Sword"
only_once = true
conditions = [{ type = "actOnItem", target_sym = "dull_longsword", action = "sharpen" }]
actions = [{ type = "replaceItem", old_sym = "dull_longsword", new_sym = "keen_longsword" }, { type = "showMessage", text = "After years of sharpening Ginsu knives to cut open aluminum cans and tomatoes, you have no problem honing the Black Knight's sword to a keen edge." }, { type = "addFlag", flag = { type = "simple", name = "sword-sharpened" } }, { type = "awardPoints", amount = 3 }]

[[triggers]]
name = "Sublevel-1-Entrance: Black Knight Kicks Player After Sword Taken"
conditions = [{ type = "withNpc", npc_id = "black_knight" }, { type = "npcInState", npc_id = "black_knight", state = "mad" }, { type = "missingFlag", flag = "appeased-black-knight" }]
actions = [{ type = "showMessage", text = "The Black Knight prances around the room, occasionally trying to kick you in the shins." }, { type = "npcSaysRandom", npc_id = "black_knight" }]

[[triggers]]
name = "Sublevel-1-Entrance: Sharpened Sword Returned"
only_once = true
conditions = [{ type = "giveToNpc", item_id = "keen_longsword", npc_id = "black_knight" }]
actions = [{ type = "restrictItem", item_id = "keen_longsword" }, { type = "addFlag", flag = { type = "simple", name = "appeased-black-knight" } }, { type = "setBarredMessage", exit_from = "sublevel-1-entrance", exit_to = "room-aa-3b", msg = "As you near the door, you are overwhelmed by a sense of spinning through an unending series of fictional realities, compelling you to step away." }, { type = "awardPoints", amount = 5 }, { type = "setNpcState", npc_id = "black_knight", state = "happy" }, { type = "npcSays", npc_id = "black_knight", quote = "hank you, good Sir! For your kind deed, I swear on my sword that I shall not cut you to bits with it. And you may pass wherever you like." }]

[[triggers]]
name = "Security-Station: Pry Evidence Locker Open"
only_once = true
conditions = [{ type = "actOnItem", target_sym = "evidence_locker_closed", action = "open" }]
actions = [{ type = "replaceItem", old_sym = "evidence_locker_closed", new_sym = "evidence_locker_open" }, { type = "showMessage", text = "Using all your weight, all your might, and most of your reserved F-bomb arsenal you pry the locker open, leaving the door barely attached." }, { type = "awardPoints", amount = 2 }]

[[triggers]]
name = "Security-Station: Take Sonic Screwdriver"
only_once = true
conditions = [{ type = "take", item_id = "sonic_screwdriver" }]
actions = [{ type = "addFlag", flag = { type = "simple", name = "got-sonic" } }, { type = "awardPoints", amount = 3 }]

[[triggers]]
name = "Med-Bay: EMH/Cure Nausea"
conditions = [{ type = "talkToNpc", npc_id = "emh" }, { type = "hasFlag", flag = "status:nauseated" }, { type = "hasFlag", flag = "read-vogon-poetry" }]
actions = [{ type = "addFlag", flag = { type = "simple", name = "cured-vogon-poetry" } }, { type = "removeFlag", flag = "status:nauseated" }, { type = "awardPoints", amount = 3 }, { type = "npcSays", npc_id = "emh", quote = "You poor fool, you look horrible. You've been reading Vogon poetry, hmmm? Here, this should help." }, { type = "showMessage", text = "The EMH gives you a hypospray in the neck, and your nausea subsides." }]

[[triggers]]
name = "Med-Bay: Talk to EMH After Finding HAL"
only_once = true
conditions = [{ type = "withNpc", npc_id = "emh" }, { type = "flagInProgress", flag = "hal-reboot" }]
actions = [{ type = "npcSays", npc_id = "emh", quote = "" }, { type = "setNpcState", npc_id = "emh", state = { custom = "want-emitter" } }, { type = "spawnItemInContainer", item_id = "broken_emitter", container_id = "lost_and_found_box" }, { type = "addFlag", flag = { type = "sequence", name = "mobilize-emh", end = 3 } }, { type = "addFlag", flag = { type = "simple", name = "got-hint-from-emh" } }]

[[triggers]]
name = "Med-Bay: EMH/Sonic Hint"
only_once = true
conditions = [{ type = "enter", room_id = "med-bay" }, { type = "hasItem", item_id = "sonic_screwdriver" }, { type = "hasFlag", flag = "mobilize-emh#1" }]
actions = [{ type = "npcSays", npc_id = "emh", quote = "Please state the nature of the med... wait -- is that a sonic screwdriver? I bet you could use that to repair my mobile emitter!" }]

[[triggers]]
name = "Aperture-Lab: Invitation Hint"
only_once = true
conditions = [{ type = "hasFlag", flag = "got-invitation" }]
actions = [{ type = "scheduleInIf", turns_ahead = 10, condition = { all = [{ type = "hasFlag", flag = "got-invitation" }, { type = "missingFlag", flag = "got-visitor-pass" }, { type = "hasVisited", room_id = "b-a-office" }] }, on_false = { type = "cancel" }, actions = [{ type = "showMessage", text = "The invitation has cooled down enough now for you to give it to the receptionist in the Amble Adventures office ... maybe she'll help you now." }], note = "invitation hint" }]

[[triggers]]
name = "Ambient Woodland"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "high-ridge" }]
actions = [{ type = "spinnerMessage", spinner = "ambientWoodland" }]

[[triggers]]
name = "Ambient Woodland"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "parish-landing" }]
actions = [{ type = "spinnerMessage", spinner = "ambientWoodland" }]

[[triggers]]
name = "Ambient Woodland"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "two-sheds-landing" }]
actions = [{ type = "spinnerMessage", spinner = "ambientWoodland" }]

[[triggers]]
name = "Ambient Woodland"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "two-sheds" }]
actions = [{ type = "spinnerMessage", spinner = "ambientWoodland" }]

[[triggers]]
name = "Ambient Woodland"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "guard-post" }]
actions = [{ type = "spinnerMessage", spinner = "ambientWoodland" }]

[[triggers]]
name = "Ambient Snowfield"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "snowfield" }]
actions = [{ type = "spinnerMessage", spinner = "ambientSnowfield" }]

[[triggers]]
name = "Ambient Snowfield"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "snow-camp" }]
actions = [{ type = "spinnerMessage", spinner = "ambientSnowfield" }]

[[triggers]]
name = "Elevator Muzak"
conditions = [{ type = "chance", one_in = 3.3333333333333335 }, { type = "inRoom", room_id = "lift-main" }]
actions = [{ type = "spinnerMessage", spinner = "muzak" }]

[[triggers]]
name = "Elevator Muzak"
conditions = [{ type = "chance", one_in = 3.3333333333333335 }, { type = "inRoom", room_id = "lift-sublevel-1" }]
actions = [{ type = "spinnerMessage", spinner = "muzak" }]

[[triggers]]
name = "Ambient: Near AA-3B"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "lift-sublevel-1" }]
actions = [{ type = "spinnerMessage", spinner = "ambientAA3B" }]

[[triggers]]
name = "Ambient: Near AA-3B"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "sublevel-1-entrance" }]
actions = [{ type = "spinnerMessage", spinner = "ambientAA3B" }]

[[triggers]]
name = "Ambient: Near AA-3B"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "corridor-north" }]
actions = [{ type = "spinnerMessage", spinner = "ambientAA3B" }]

[[triggers]]
name = "Ambient: Near AA-3B"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "corridor-south" }]
actions = [{ type = "spinnerMessage", spinner = "ambientAA3B" }]

[[triggers]]
name = "Ambient: Near AA-3B"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "observation-room" }]
actions = [{ type = "spinnerMessage", spinner = "ambientAA3B" }]

[[triggers]]
name = "Ambient: Near AA-3B"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "security-station" }]
actions = [{ type = "spinnerMessage", spinner = "ambientAA3B" }]

[[triggers]]
name = "Ambient: Near AA-3B"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "med-bay" }]
actions = [{ type = "spinnerMessage", spinner = "ambientAA3B" }]

[[triggers]]
name = "Ambient: Near AA-3B"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "monolith-room" }]
actions = [{ type = "spinnerMessage", spinner = "ambientAA3B" }]

[[triggers]]
name = "Ambient: Main Floor"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "main-lobby" }]
actions = [{ type = "spinnerMessage", spinner = "ambientInterior" }]

[[triggers]]
name = "Ambient: Main Floor"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "b-a-office" }]
actions = [{ type = "spinnerMessage", spinner = "ambientInterior" }]

[[triggers]]
name = "Ambient: Main Floor"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "restaurant" }]
actions = [{ type = "spinnerMessage", spinner = "ambientInterior" }]

[[triggers]]
name = "Ambient: Main Floor"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "patio" }]
actions = [{ type = "spinnerMessage", spinner = "ambientInterior" }]

[[triggers]]
name = "Ambient: Main Floor"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "lift-bank-main" }]
actions = [{ type = "spinnerMessage", spinner = "ambientInterior" }]

[[triggers]]
name = "Ambient: Main Floor"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "lounge" }]
actions = [{ type = "spinnerMessage", spinner = "ambientInterior" }]

[[triggers]]
name = "Ambient: Main Floor"
conditions = [{ type = "chance", one_in = 5.0 }, { type = "inRoom", room_id = "vip-bathroom" }]
actions = [{ type = "spinnerMessage", spinner = "ambientInterior" }]

[[triggers]]
name = "Vogon Poetry Causes Nausea"
conditions = [{ type = "useItem", item_id = "vogon_poetry_book", ability = "read" }]
actions = [{ type = "showMessage", text = "You nearly get through the first poem when the vomiting begins..." }, { type = "addFlag", flag = { type = "simple", name = "read-vogon-poetry" } }, { type = "addFlag", flag = { type = "simple", name = "status:nauseated" } }, { type = "awardPoints", amount = -1 }]

[[triggers]]
name = "Status: Nauseated"
conditions = [{ type = "hasFlag", flag = "status:nauseated" }, { type = "chance", one_in = 2.0 }]
actions = [{ type = "spinnerMessage", spinner = "nauseated" }]
