{
  "name": "Amble DSL",
  "scopeName": "source.amble",
  "patterns": [
    { "include": "#comment" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#keywords" },
    { "include": "#conditions" },
    { "include": "#actions" },
    { "include": "#events" },
    { "include": "#sets" },
    { "include": "#ident" },
    { "include": "#punctuation" }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line.number-sign.amble",
          "match": "#.*$"
        }
      ]
    },
    "strings": {
      "patterns": [
        { "name": "string.quoted.triple.amble", "begin": "\"\"\"", "end": "\"\"\"", "patterns": [{"include": "#escapes"}] },
        { "name": "string.quoted.raw_hash.amble", "match": "r#+\"[\u0000-\u001F\u0020-\u0021\u0023-\u005B\u005D-\u10FFFF]*\"#+" },
        { "name": "string.quoted.raw.amble", "begin": "r\"", "end": "\"" },
        { "name": "string.quoted.double.amble", "begin": "\"", "end": "\"", "patterns": [{"include": "#escapes"}] },
        { "name": "string.quoted.single.amble", "begin": "'", "end": "'", "patterns": [{"include": "#escapes"}] }
      ]
    },
    "escapes": {
      "patterns": [
        { "name": "constant.character.escape.amble", "match": "\\[nrt\\\"]" }
      ]
    },
    "numbers": {
      "patterns": [
        { "name": "constant.numeric.integer.amble", "match": "\\b[0-9]+%?\\b" }
      ]
    },
    "keywords": {
      "patterns": [
        { "name": "keyword.control.amble", "match": "\\b(trigger|when|only|once|if|do|note|onFalse)\\b" },
        { "name": "keyword.other.amble", "match": "\\b(let|set)\\b" }
      ]
    },
    "events": {
      "patterns": [
        { "name": "support.function.event.amble", "match": "\\b(enter|leave|look|open|use|act|take|drop|unlock|insert|talk|give)\\b" },
        { "name": "storage.modifier.event.amble", "match": "\\b(room|item|ability|on|interaction|to|from|npc|player|into|container|at)\\b" },
        { "name": "constant.language.event.amble", "match": "\\balways\\b" }
      ]
    },
    "conditions": {
      "patterns": [
        { "name": "support.type.condition.amble", "match": "\\b(has|missing|visited|progress|complete|with|in|any|all|chance|ambient)\\b" }
      ]
    },
    "actions": {
      "patterns": [
        { "name": "support.type.action.amble", "match": "\\b(show|add|remove|reset|advance|award|points|schedule|cancel|retryAfter|retryNextTurn|lock|unlock|exit|direction|reveal|push|set|description|random|refuse|state|deny|read|restrict|barred|message|spinner|wedge|width|give)\\b" }
      ]
    },
    "sets": {
      "patterns": [
        { "name": "variable.language.set.amble", "match": "\\blet\\s+set\\b" },
        { "name": "punctuation.section.set.amble", "match": "[(),]" }
      ]
    },
    "ident": {
      "patterns": [
        { "name": "variable.other.amble", "match": "\\b[A-Za-z0-9_:-]+\\b" }
      ]
    },
    "punctuation": {
      "patterns": [
        { "name": "punctuation.section.block.amble", "match": "[{}]" }
      ]
    }
  },
  "scopeNameAliases": ["text.amble"]
}

