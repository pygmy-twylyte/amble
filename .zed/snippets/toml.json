{
  "trigger-new": {
    "prefix": "trigger-new",
    "description": "New full trigger block",
    "body": [
      "[[triggers]]",
      "name = \"${1:Trigger Name}\"",
      "only_once = ${2:true}",
      "conditions = [",
      "    ${3}",
      "]",
      "actions = [",
      "    ${4}",
      "]"
    ]
  },
  "tc-enter": {
    "prefix": "tc-enter",
    "description": "Condition: enter room",
    "body": ["{ type = \"enter\", room_id = \"${1:room-id}\" }"]
  },
  "tc-leave": {
    "prefix": "tc-leave",
    "description": "Condition: leave room",
    "body": ["{ type = \"leave\", room_id = \"${1:room-id}\" }"]
  },
  "tc-hasItem": {
    "prefix": "tc-has-item",
    "description": "Condition: has item",
    "body": ["{ type = \"hasItem\", item_id = \"${1:item-id}\" }"]
  },
  "tc-missingItem": {
    "prefix": "tc-missing-item",
    "description": "Condition: missing item",
    "body": ["{ type = \"missingItem\", item_id = \"${1:item-id}\" }"]
  },
  "tc-hasFlag": {
    "prefix": "tc-has-flag",
    "description": "Condition: has flag",
    "body": ["{ type = \"hasFlag\", flag = \"${1:flag-name}\" }"]
  },
  "tc-missingFlag": {
    "prefix": "tc-missing-flag",
    "description": "Condition: missing flag",
    "body": ["{ type = \"missingFlag\", flag = \"${1:flag-name}\" }"]
  },
  "tc-flagInProgress": {
    "prefix": "tc-flag-in-progress",
    "description": "Condition: flag in progress",
    "body": ["{ type = \"flagInProgress\", flag = \"${1:sequence-flag}\" }"]
  },
  "tc-flagComplete": {
    "prefix": "tc-flag-complete",
    "description": "Condition: flag complete",
    "body": ["{ type = \"flagComplete\", flag = \"${1:sequence-flag}\" }"]
  },
  "tc-talkToNpc": {
    "prefix": "tc-talk-to-npc",
    "description": "Condition: talk to NPC",
    "body": ["{ type = \"talkToNpc\", npc_id = \"${1:npc-id}\" }"]
  },
  "tc-withNpc": {
    "prefix": "tc-with-npc",
    "description": "Condition: with NPC",
    "body": ["{ type = \"withNpc\", npc_id = \"${1:npc-id}\" }"]
  },
  "tc-npcInState": {
    "prefix": "tc-npc-in-state",
    "description": "Condition: NPC in state",
    "body": [
      "{ type = \"npcInState\", npc_id = \"${1:npc-id}\", state = \"${2:state}\" }"
    ]
  },
  "tc-take": {
    "prefix": "tc-take",
    "description": "Condition: take item",
    "body": ["{ type = \"take\", item_id = \"${1:item-id}\" }"]
  },
  "tc-drop": {
    "prefix": "tc-drop",
    "description": "Condition: drop item",
    "body": ["{ type = \"drop\", item_id = \"${1:item-id}\" }"]
  },
  "tc-useItem": {
    "prefix": "tc-use-item",
    "description": "Condition: use item ability",
    "body": [
      "{ type = \"useItem\", item_id = \"${1:item-id}\", ability = \"${2:ability}\" }"
    ]
  },
  "tc-useItemOnItem": {
    "prefix": "tc-use-item-on-item",
    "description": "Condition: use item on item",
    "body": [
      "{ type = \"useItemOnItem\", tool_id = \"${1:tool-id}\", target_id = \"${2:target-id}\", interaction = \"${3:interaction}\" }"
    ]
  },
  "tc-insert": {
    "prefix": "tc-insert",
    "description": "Condition: insert item into container",
    "body": [
      "{ type = \"insert\", item_id = \"${1:item-id}\", container_id = \"${2:container-id}\" }"
    ]
  },
  "tc-containerHasItem": {
    "prefix": "tc-container-has-item",
    "description": "Condition: container has item",
    "body": [
      "{ type = \"containerHasItem\", container_id = \"${1:container-id}\", item_id = \"${2:item-id}\" }"
    ]
  },
  "tc-unlock": {
    "prefix": "tc-unlock",
    "description": "Condition: unlock container",
    "body": ["{ type = \"unlock\", item_id = \"${1:item-id}\" }"]
  },
  "tc-giveToNpc": {
    "prefix": "tc-give-to-npc",
    "description": "Condition: give item to NPC",
    "body": [
      "{ type = \"giveToNpc\", item_id = \"${1:item-id}\", npc_id = \"${2:npc-id}\" }"
    ]
  },
  "tc-hasVisited": {
    "prefix": "tc-has-visited",
    "description": "Condition: has visited room",
    "body": ["{ type = \"hasVisited\", room_id = \"${1:room-id}\" }"]
  },
  "tc-takeFromNpc": {
    "prefix": "tc-take-from-npc",
    "description": "Condition: take from NPC",
    "body": [
      "{ type = \"takeFromNpc\", item_id = \"${1:item-id}\", npc_id = \"${2:npc-id}\" }"
    ]
  },
  "tc-ambient": {
    "prefix": "tc-ambient",
    "description": "Condition: ambient spinner",
    "body": [
      "{ type = \"ambient\", spinner = \"${1:spinner-id}\", room_ids = [ \"${2:room-id}\" ] }"
    ]
  },
  "tc-act-on-item": {
    "prefix": "tc-act-on-item",
    "description": "Condition: act on item",
    "body": [
      "{ type = \"actOnItem\", target_sym = \"${1:item-id}\", action = \"${2:action}\" }"
    ]
  },
  "tc-in-room": {
    "prefix": "tc-in-room",
    "description": "Condition: in room",
    "body": ["{ type = \"inRoom\", room_id = \"${1:room-id}\" }"]
  },
  "tc-look-at": {
    "prefix": "tc-look-at",
    "description": "Condition: look at item",
    "body": ["{ type = \"lookAt\", item_id = \"${1:item-id}\" }"]
  },
  "tc-npc-has-item": {
    "prefix": "tc-npc-has-item",
    "description": "Condition: NPC has item",
    "body": [
      "{ type = \"npcHasItem\", npc_id = \"${1:npc-id}\", item_id = \"${2:item-id}\" }"
    ]
  },
  "tc-open": {
    "prefix": "tc-open",
    "description": "Condition: open item",
    "body": ["{ type = \"open\", item_id = \"${1:item-id}\" }"]
  },
  "ta-showMessage": {
    "prefix": "ta-show-message",
    "description": "Action: show message",
    "body": ["{ type = \"showMessage\", text = \"\"\"${1:message}\"\"\" }"]
  },
  "ta-awardPoints": {
    "prefix": "ta-award-points",
    "description": "Action: award points",
    "body": ["{ type = \"awardPoints\", amount = ${1:5} }"]
  },
  "ta-addFlag": {
    "prefix": "ta-add-flag",
    "description": "Action: add flag",
    "body": [
      "{ type = \"addFlag\", flag = { type = \"simple\", name = \"${1:flag-name}\" } }"
    ]
  },
  "ta-removeFlag": {
    "prefix": "ta-remove-flag",
    "description": "Action: remove flag",
    "body": ["{ type = \"removeFlag\", flag = \"${1:flag-name}\" }"]
  },
  "ta-advanceFlag": {
    "prefix": "ta-advance-flag",
    "description": "Action: advance sequence flag",
    "body": ["{ type = \"advanceFlag\", flag = \"${1:flag-name}\" }"]
  },
  "ta-revealExit": {
    "prefix": "ta-reveal-exit",
    "description": "Action: reveal exit",
    "body": [
      "{ type = \"revealExit\", direction = \"${1:dir}\", exit_from = \"${2:room-id}\", exit_to = \"${3:room-id}\" }"
    ]
  },
  "ta-setNpcState": {
    "prefix": "ta-set-npc-state",
    "description": "Action: set NPC state",
    "body": [
      "{ type = \"setNpcState\", npc_id = \"${1:npc-id}\", state = \"${2:state}\" }"
    ]
  },
  "ta-npcSays": {
    "prefix": "ta-npc-says",
    "description": "Action: NPC says fixed quote",
    "body": [
      "{ type = \"npcSays\", npc_id = \"${1:npc-id}\", quote = \"\"\"${2:quote}\"\"\" }"
    ]
  },
  "ta-npcSaysRandom": {
    "prefix": "ta-npc-says-random",
    "description": "Action: NPC says random quote",
    "body": ["{ type = \"npcSaysRandom\", npc_id = \"${1:npc-id}\" }"]
  },
  "ta-despawnItem": {
    "prefix": "ta-despawn-item",
    "description": "Action: despawn item",
    "body": ["{ type = \"despawnItem\", item_id = \"${1:item-id}\" }"]
  },
  "ta-spawnItemInRoom": {
    "prefix": "ta-spawn-in-room",
    "description": "Action: spawn item in room",
    "body": [
      "{ type = \"spawnItemInRoom\", item_id = \"${1:item-id}\", room_id = \"${2:room-id}\" }"
    ]
  },
  "ta-spawnItemCurrentRoom": {
    "prefix": "ta-spawn-current-room",
    "description": "Action: spawn item in current room",
    "body": ["{ type = \"spawnItemCurrentRoom\", item_id = \"${1:item-id}\" }"]
  },
  "ta-spawnItemInInventory": {
    "prefix": "ta-spawn-inventory",
    "description": "Action: spawn item in inventory",
    "body": ["{ type = \"spawnItemInInventory\", item_id = \"${1:item-id}\" }"]
  },
  "ta-giveItemToPlayer": {
    "prefix": "ta-give-to-player",
    "description": "Action: NPC gives item to player",
    "body": [
      "{ type = \"giveItemToPlayer\", npc_id = \"${1:npc-id}\", item_id = \"${2:item-id}\" }"
    ]
  },
  "ta-spawnItemInContainer": {
    "prefix": "ta-spawn-container",
    "description": "Action: spawn item in container",
    "body": [
      "{ type = \"spawnItemInContainer\", item_id = \"${1:item-id}\", container_id = \"${2:container-id}\" }"
    ]
  },
  "ta-restrictItem": {
    "prefix": "ta-restrict-item",
    "description": "Action: restrict item after use",
    "body": ["{ type = \"restrictItem\", item_id = \"${1:item-id}\" }"]
  },
  "ta-pushPlayerTo": {
    "prefix": "ta-push-player",
    "description": "Action: move player to room",
    "body": ["{ type = \"pushPlayerTo\", room_id = \"${1:room-id}\" }"]
  },
  "ta-denyRead": {
    "prefix": "ta-deny-read",
    "description": "Action: deny reading an item",
    "body": ["{ type = \"denyRead\", reason = \"${1:reason}\" }"]
  },
  "ta-spinnerMessage": {
    "prefix": "ta-spinner-message",
    "description": "Action: show spinner message",
    "body": ["{ type = \"spinnerMessage\", spinner = \"${1:spinner-id}\" }"]
  },
  "ta-addSpinnerWedge": {
    "prefix": "ta-add-spinner",
    "description": "Action: add message to spinner",
    "body": [
      "{ type = \"addSpinnerWedge\", spinner = \"${1:spinner-id}\", width = ${2:1}, text = \"\"\"",
      "${3:spinner message}",
      "\"\"\" }"
    ]
  },
  "ta-lockItem": {
    "prefix": "ta-lock-item",
    "description": "Action: lock item",
    "body": ["{ type = \"lockItem\", item_id = \"${1:item-id}\" }"]
  },
  "ta-unlockItem": {
    "prefix": "ta-unlock-item",
    "description": "Action: unlock item",
    "body": ["{ type = \"unlockItem\", item_id = \"${1:item-id}\" }"]
  },
  "ta-lockExit": {
    "prefix": "ta-lock-exit",
    "description": "Action: lock exit",
    "body": [
      "{ type = \"lockExit\", from_room = \"${1:room-id}\", direction = \"${2:direction}\" }"
    ]
  },
  "ta-unlockExit": {
    "prefix": "ta-unlock-exit",
    "description": "Action: unlock exit",
    "body": [
      "{ type = \"unlockExit\", from_room = \"${1:room-id}\", direction = \"${2:direction}\" }"
    ]
  },
  "ta-npcRefuseItem": {
    "prefix": "ta-npc-refuse-item",
    "description": "Action: NPC refuses item",
    "body": [
      "{ type = \"npcRefuseItem\", npc_id = \"${1:npc-id}\", reason = \"${2:reason}\" }"
    ]
  },
  "ta-resetFlag": {
    "prefix": "ta-reset-flag",
    "description": "Action: reset sequence flag",
    "body": ["{ type = \"resetFlag\", flag = \"${1:flag-name}\" }"]
  },
  "ta-setItemDescription": {
    "prefix": "ta-set-item-desc",
    "description": "Action: set item description",
    "body": [
      "{ type = \"setItemDescription\", item_sym = \"${1:item-id}\", text = \"${2:new description}\" }"
    ]
  },
  "ta-setBarredMessage": {
    "prefix": "ta-set-barred-message",
    "description": "Action: set barred exit message",
    "body": [
      "{ type = \"setBarredMessage\", exit_from = \"${1:from-room-id}\", exit_to = \"${2:to-room-id}\", msg = \"${3:message}\" }"
    ]
  },
  "ta-setContainerState": {
    "prefix": "ta-set-container-state",
    "description": "Action: set container state",
    "body": [
      "{ type = \"setContainerState\", item_sym = \"${1:item-id}\", state = \"${2:open}\" }"
    ]
  },
  "ta-replaceItem": {
    "prefix": "ta-replace-item",
    "description": "Action: replace item",
    "body": [
      "{ type = \"replaceItem\", old_sym = \"${1:old-item-id}\", new_sym = \"${2:new-item-id}\" }"
    ]
  },
  "ta-replaceDropItem": {
    "prefix": "ta-replace-drop-item",
    "description": "Action: replace item on drop",
    "body": [
      "{ type = \"replaceDropItem\", old_sym = \"${1:old-item-id}\", new_sym = \"${2:new-item-id}\" }"
    ]
  },
  "ta-scheduleIn": {
    "prefix": "ta-schedule-in",
    "description": "Action: schedule actions in N turns",
    "body": [
      "{ type = \"scheduleIn\", turns_ahead = ${1:3}, note = \"${2:description}\", actions = [",
      "    ${3}",
      "] }"
    ]
  },
  "ta-scheduleOn": {
    "prefix": "ta-schedule-on",
    "description": "Action: schedule actions on specific turn",
    "body": [
      "{ type = \"scheduleOn\", on_turn = ${1:10}, note = \"${2:description}\", actions = [",
      "    ${3}",
      "] }"
    ]
  },
  "item-new": {
    "prefix": "item-new",
    "description": "New full item block",
    "body": [
      "[[items]]",
      "id = \"${1:item-id}\"",
      "name = \"${2:Item Name}\"",
      "description = \"\"\"",
      "${3:Description text here.}",
      "\"\"\"",
      "portable = ${4:true}",
      "location = { Room = \"${5:room-id}\" }"
    ]
  },
  "item-location-room": {
    "prefix": "item-loc-room",
    "description": "Location: Room",
    "body": ["location = { Room = \"${1:room-id}\" }"]
  },
  "item-location-nowhere": {
    "prefix": "item-loc-nowhere",
    "description": "Location: Nowhere (spawning logic)",
    "body": ["location = { Nowhere = \"${1:spawning-description}\" }"]
  },
  "item-location-inventory": {
    "prefix": "item-loc-inv",
    "description": "Location: Player inventory",
    "body": ["location = { Inventory = \"player\" }"]
  },
  "item-location-npc": {
    "prefix": "item-loc-npc",
    "description": "Location: Carried by NPC",
    "body": ["location = { Npc = \"${1:npc-id}\" }"]
  },
  "item-location-chest": {
    "prefix": "item-loc-chest",
    "description": "Location: Inside container item",
    "body": ["location = { Chest = \"${1:container-id}\" }"]
  },
  "item-ability-read": {
    "prefix": "item-ability-read",
    "description": "Ability: Read",
    "body": ["[[items.abilities]]", "type = \"Read\""]
  },
  "item-ability-unlock": {
    "prefix": "item-ability-unlock",
    "description": "Ability: Unlock something",
    "body": [
      "[[items.abilities]]",
      "type = \"Unlock\"",
      "target = \"${1:target-id}\""
    ]
  },
  "item-ability-custom": {
    "prefix": "item-ability-custom",
    "description": "Ability: Custom type",
    "body": ["[[items.abilities]]", "type = \"${1:CustomAbility}\""]
  },
  "item-container-open": {
    "prefix": "item-container-open",
    "description": "Container state: open",
    "body": ["container_state = \"open\""]
  },
  "item-container-closed": {
    "prefix": "item-container-closed",
    "description": "Container state: closed",
    "body": ["container_state = \"closed\""]
  },
  "item-container-locked": {
    "prefix": "item-container-locked",
    "description": "Container state: locked",
    "body": ["container_state = \"locked\""]
  },
  "item-req-burn": {
    "prefix": "item-req-burn",
    "description": "Interaction requirement: burn",
    "body": ["interaction_requires.burn = \"ignite\""]
  },
  "item-req-cut": {
    "prefix": "item-req-cut",
    "description": "Interaction requirement: cut",
    "body": ["interaction_requires.cut = \"cutWood\""]
  },
  "item-req-break": {
    "prefix": "item-req-break",
    "description": "Interaction requirement: break",
    "body": ["interaction_requires.break = \"smash\""]
  },
  "item-req-clean": {
    "prefix": "item-req-clean",
    "description": "Interaction requirement: clean",
    "body": ["interaction_requires.clean = \"clean\""]
  },
  "item-ability-ignite": {
    "prefix": "item-ability-ignite",
    "description": "Ability: Ignite",
    "body": ["[[items.abilities]]", "type = \"Ignite\""]
  },
  "item-ability-clean": {
    "prefix": "item-ability-clean",
    "description": "Ability: Clean",
    "body": ["[[items.abilities]]", "type = \"Clean\""]
  },
  "item-ability-cutwood": {
    "prefix": "item-ability-cutwood",
    "description": "Ability: CutWood",
    "body": ["[[items.abilities]]", "type = \"CutWood\""]
  },
  "item-ability-smash": {
    "prefix": "item-ability-smash",
    "description": "Ability: Smash",
    "body": ["[[items.abilities]]", "type = \"Smash\""]
  },
  "item-ability-pry": {
    "prefix": "item-ability-pry",
    "description": "Ability: Pry",
    "body": ["[[items.abilities]]", "type = \"Pry\""]
  },
  "item-ability-sharpen": {
    "prefix": "item-ability-sharpen",
    "description": "Ability: Sharpen",
    "body": ["[[items.abilities]]", "type = \"Sharpen\""]
  },
  "item-ability-insulate": {
    "prefix": "item-ability-insulate",
    "description": "Ability: Insulate",
    "body": ["[[items.abilities]]", "type = \"Insulate\""]
  },
  "item-ability-use": {
    "prefix": "item-ability-use",
    "description": "Ability: Use",
    "body": ["[[items.abilities]]", "type = \"Use\""]
  },
  "item-ability-turnon": {
    "prefix": "item-ability-turnon",
    "description": "Ability: TurnOn",
    "body": ["[[items.abilities]]", "type = \"TurnOn\""]
  },
  "item-ability-turnoff": {
    "prefix": "item-ability-turnoff",
    "description": "Ability: TurnOff",
    "body": ["[[items.abilities]]", "type = \"TurnOff\""]
  },
  "item-ability-attach": {
    "prefix": "item-ability-attach",
    "description": "Ability: Attach",
    "body": ["[[items.abilities]]", "type = \"Attach\""]
  },
  "item-ability-pluck": {
    "prefix": "item-ability-pluck",
    "description": "Ability: Pluck",
    "body": ["[[items.abilities]]", "type = \"Pluck\""]
  },
  "item-ability-repair": {
    "prefix": "item-ability-repair",
    "description": "Ability: Repair",
    "body": ["[[items.abilities]]", "type = \"Repair\""]
  },
  "room-new": {
    "prefix": "room-new",
    "description": "New full room block",
    "body": [
      "[[rooms]]",
      "id = \"${1:room-id}\"",
      "name = \"${2:Room Name}\"",
      "base_description = \"\"\"",
      "${3:Room description here.}",
      "\"\"\"",
      "location = \"${4:Nowhere}\"",
      "visited = ${5:false}"
    ]
  },
  "room-exit": {
    "prefix": "room-exit",
    "description": "Exit definition",
    "body": ["[rooms.exits.${1:direction}]", "to = \"${2:room-id}\""]
  },
  "room-exit-req-flag": {
    "prefix": "room-exit-flag",
    "description": "Exit with required flag and barred message",
    "body": [
      "[rooms.exits.${1:direction}]",
      "to = \"${2:room-id}\"",
      "required_flags = [{ type = \"simple\", name = \"${3:flag-name}\" }]",
      "barred_message = \"${4:Access denied message}\""
    ]
  },
  "room-overlay": {
    "prefix": "room-overlay",
    "description": "Room overlay with flag condition",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"${1:flagSet}\", flag = \"${2:flag-name}\" }",
      "text = \"\"\"",
      "${3:Overlay text}",
      "\"\"\""
    ]
  },
  "room-overlay-flag-unset": {
    "prefix": "room-overlay-flag-unset",
    "description": "Room overlay: flag unset",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"flagUnset\", flag = \"${1:flag-name}\" }",
      "text = \"\"\"",
      "${2:Overlay text}",
      "\"\"\""
    ]
  },
  "room-overlay-flag-complete": {
    "prefix": "room-overlay-flag-complete",
    "description": "Room overlay: flag complete",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"flagComplete\", flag = \"${1:flag-name}\" }",
      "text = \"\"\"",
      "${2:Overlay text}",
      "\"\"\""
    ]
  },
  "room-overlay-item-present": {
    "prefix": "room-overlay-item-present",
    "description": "Room overlay: item present",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"itemPresent\", item_id = \"${1:item-id}\" }",
      "text = \"\"\"",
      "${2:Overlay text}",
      "\"\"\""
    ]
  },
  "room-overlay-item-absent": {
    "prefix": "room-overlay-item-absent",
    "description": "Room overlay: item absent",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"itemAbsent\", item_id = \"${1:item-id}\" }",
      "text = \"\"\"",
      "${2:Overlay text}",
      "\"\"\""
    ]
  },
  "room-overlay-player-has-item": {
    "prefix": "room-overlay-player-has-item",
    "description": "Room overlay: player has item",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"playerHasItem\", item_id = \"${1:item-id}\" }",
      "text = \"\"\"",
      "${2:Overlay text}",
      "\"\"\""
    ]
  },
  "room-overlay-player-missing-item": {
    "prefix": "room-overlay-player-missing-item",
    "description": "Room overlay: player missing item",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"playerMissingItem\", item_id = \"${1:item-id}\" }",
      "text = \"\"\"",
      "${2:Overlay text}",
      "\"\"\""
    ]
  },
  "room-overlay-npc-in-state": {
    "prefix": "room-overlay-npc-state",
    "description": "Room overlay: NPC in state",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"npcInState\", npc_id = \"${1:npc-id}\", state = \"${2:state}\" }",
      "text = \"\"\"",
      "${3:Overlay text}",
      "\"\"\""
    ]
  },
  "room-overlay-item-in-room": {
    "prefix": "room-overlay-item-in-room",
    "description": "Room overlay: item in room",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"itemInRoom\", item_id = \"${1:item-id}\", room_id = \"${2:room-id}\" }",
      "text = \"\"\"",
      "${3:Overlay text}",
      "\"\"\""
    ]
  },
  "room-overlay-npc-present": {
    "prefix": "room-overlay-npc-present",
    "description": "Room overlay: NPC present",
    "body": [
      "[[rooms.overlays]]",
      "condition = { type = \"npcPresent\", npc_id = \"${1:npc-id}\" }",
      "text = \"\"\"",
      "${2:Overlay text}",
      "\"\"\""
    ]
  },
  "npc-new": {
    "prefix": "npc-new",
    "description": "New full NPC block",
    "body": [
      "[[npcs]]",
      "id = \"${1:npc-id}\"",
      "name = \"${2:Name}\"",
      "description = \"\"\"",
      "${3:NPC description here.}",
      "\"\"\"",
      "state = \"${4:normal}\"",
      "",
      "[npcs.location]",
      "Room = \"${5:room-id}\""
    ]
  },
  "npc-dialogue": {
    "prefix": "npc-dialogue",
    "description": "Dialogue list for mood or custom state",
    "body": [
      "[npcs.dialogue.\"${1:state-or-custom}\"]",
      "\"${2:First line}\",",
      "\"${3:Second line}\""
    ]
  },
  "goal-new": {
    "prefix": "goal-new",
    "description": "New goal block",
    "body": [
      "[[goals]]",
      "id = \"${1:goal-id}\"",
      "name = \"${2:Goal Name}\"",
      "description = \"${3:Goal description}\"",
      "group = { type = \"${4:required}\" }",
      "activate_when = { type = \"${5:hasFlag}\", flag = \"${6:some-flag}\" }",
      "finished_when = { type = \"${7:hasFlag}\", flag = \"${8:done-flag}\" }"
    ]
  },
  "goal-finished-flag": {
    "prefix": "goal-finished-flag",
    "description": "Finished when: has flag",
    "body": [
      "finished_when = { type = \"hasFlag\", flag = \"${1:flag-name}\" }"
    ]
  },
  "goal-finished-room": {
    "prefix": "goal-finished-room",
    "description": "Finished when: reached room",
    "body": [
      "finished_when = { type = \"reachedRoom\", room_sym = \"${1:room-id}\" }"
    ]
  },
  "goal-finished-sequence": {
    "prefix": "goal-finished-sequence",
    "description": "Finished when: sequence flag complete",
    "body": [
      "finished_when = { type = \"flagComplete\", flag = \"${1:sequence-flag}\" }"
    ]
  },
  "goal-activate-flag": {
    "prefix": "goal-activate-flag",
    "description": "Activate when: has flag",
    "body": [
      "activate_when = { type = \"hasFlag\", flag = \"${1:flag-name}\" }"
    ]
  },
  "goal-activate-complete": {
    "prefix": "goal-activate-complete",
    "description": "Activate when: another goal complete",
    "body": [
      "activate_when = { type = \"goalComplete\", goal_id = \"${1:goal-id}\" }"
    ]
  },
  "goal-group": {
    "prefix": "goal-group",
    "description": "Goal group type",
    "body": ["group = { type = \"${1:required}\" }"]
  },
  "goal-activate-item": {
    "prefix": "goal-activate-item",
    "description": "Activate when: has item",
    "body": [
      "activate_when = { type = \"hasItem\", item_sym = \"${1:item-id}\" }"
    ]
  },
  "goal-finished-item": {
    "prefix": "goal-finished-item",
    "description": "Finished when: has item",
    "body": [
      "finished_when = { type = \"hasItem\", item_sym = \"${1:item-id}\" }"
    ]
  },
  "goal-activate-missing-flag": {
    "prefix": "goal-activate-missing-flag",
    "description": "Activate when: missing flag",
    "body": [
      "activate_when = { type = \"missingFlag\", flag = \"${1:flag-name}\" }"
    ]
  },
  "goal-finished-missing-flag": {
    "prefix": "goal-finished-missing-flag",
    "description": "Finished when: missing flag",
    "body": [
      "finished_when = { type = \"missingFlag\", flag = \"${1:flag-name}\" }"
    ]
  },
  "goal-activate-in-progress": {
    "prefix": "goal-activate-in-progress",
    "description": "Activate when: sequence flag in progress",
    "body": [
      "activate_when = { type = \"flagInProgress\", flag = \"${1:sequence-flag}\" }"
    ]
  },
  "goal-finished-in-progress": {
    "prefix": "goal-finished-in-progress",
    "description": "Finished when: sequence flag in progress",
    "body": [
      "finished_when = { type = \"flagInProgress\", flag = \"${1:sequence-flag}\" }"
    ]
  }
}
